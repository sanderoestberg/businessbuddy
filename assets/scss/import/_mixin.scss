/*==============================
=            mixins            =
==============================*/

// padding-fix for flexible sections
/*
$themes: 'white-theme' 'lightgrey-theme' 'black-theme' 'lightblue-theme' 'darkblue-theme';
@each $name in $themes {
    .flexible-inner-section.has-padding.#{$name} + .flexible-inner-section.has-padding.#{$name} {
        padding-top: 0px;
    }
}
*/

/*----------  Box shadows  ----------*/
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}


@mixin bbhbtn{
    display: block;
    text-align: center;
    background-color: $colorGreen;
	padding: 17px 30px;
	border-radius: $borderRadiusBtn;
	color: $colorWhite !important;
	font-weight: 600;
    width: fit-content;
    cursor: pointer;
    transition: 0.3s all;
	&:hover{
		color: $colorWhite;
		background-color: $colorGreenFaded;
	}
}



/*----------  Theme colors  ----------*/

@mixin regularThemes{
	// &.white-theme{
	// 	background-color: $colorWhite;
	// }
	// &.lightgrey-theme{
	// 	background-color: $colorLightgray;
	// }
    // &.grey-theme{
    //     background-color: $colorGray;
    // }
	// &.black-theme{
	// 	background-color: $colorBlack;
	// }
	// &.blue-theme{
	// 	background-color: $colorBlue;
	// }
	// &.darkblue-theme{
	// 	background-color: $colorDarkblue;
	// }
}

/*----------  content color  ----------*/
@mixin contentColor{
	// .black-theme&{
	// 	color: $colorWhite;
	// }
	// .blue-theme&{
	// 	color: $colorWhite;
	// }
	// .darkblue-theme&{
	// 	color: $colorWhite;
	// }
}

/*----------  clearfix  ----------*/
@mixin clearfix($before:""){
	&::after{
		content: "";
		display: table;
		clear: both;
	}
	@if($before == true){
		&::before{
			content: "";
			display: table;
			clear: both;
		}
	}
}

/*----------  Background cover  ----------*/
@mixin cover{
    background-size: cover;
    background-position: 50% 50%;
}


/*----------  Col classes  ----------*/
@mixin col($padding:"", $size:""){
    display: inline-block;
    box-sizing: border-box;
    min-height: 1px;
    float: left;
    position: relative;

    @if($padding != ""){
    	padding-left: $padding;
    	padding-right: $padding;
    } @else{
		padding-left: 15px;
		padding-right: 15px;
    }

    @if($size != ""){
    	width: ($size / 12) * 100%;
    }
}

/*----------  animation duration and delay  ----------*/

@mixin animationSettings($duration, $delay, $forward:""){

	-webkit-animation-delay: $delay;
	-o-animation-delay: $delay;
	animation-delay: $delay;
	-moz-animation-delay: $delay;

	-webkit-animation-duration: $duration;
	-o-animation-duration: $duration;
	animation-duration: $duration;
	-moz-animation-duration: $duration;


	@if ($forward == true) {
		-webkit-animation-fill-mode: forwards;
		-o-animation-fill-mode: forwards;
		animation-fill-mode: forwards;
		-moz-animation-fill-mode: forwards;
	}
}



/*----------  Easy media query  ----------*/

@mixin mq($width, $type: min) {
    @media only screen and (#{$type}-width: $width) {
        @content;
    }
}
/*----------- Woocommerce archive grid -----------*/
@mixin woo-grid($min: 0px, $max: 9999px, $cols: 3, $class: '') {

    @media only screen and (min-width: $min) and (max-width: $max){
        body.woocommerce, #{$class}{
            ul.products[class*="columns"] li.product{
                width: (100% / $cols) - 2%;
                float: left !important;
                clear: none;
                margin-right: 2%;
                &:nth-of-type(#{$cols}n+#{$cols}){
                    float: right;
                    clear: right;
                }
                &:nth-of-type(#{$cols}n+1){
                    clear: both;
                }
            }
        }
    }
}

/*----------  input placeholders  ----------*/
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
	&::-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

/*----------- Selection pseudo selector -----------*/
@mixin selection{
	&::selection {
  		@content;
	}
	&::-moz-selection {
	  	@content;
	}
}
/*----------  Center absolute  ----------*/
@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

/*----------  text truncate / ellipses after text  ----------*/
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}



/*===================================
=            Burger sass            =
===================================*/
// Burger parts
//
// (---) top    -> &::before
// [---] middle -> &
// (---) bottom -> &::after


// Vendor prefixes
$sass-burger-add-vendor-prefixes: true !default;

// Burger
@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {
    $burger-height: $height;
    $burger-gutter: $gutter;

    position: relative;
    margin-top: $height + $gutter;
    margin-bottom: $height + $gutter;

    @if $sass-burger-add-vendor-prefixes {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }
    user-select: none;

    // 1. Fixes jagged edges in Firefox, see issue #10.
    &, &::before, &::after {
        display: block;
        width: $width;
        height: $height;
        background-color: $color;
        outline: 1px solid transparent; // 1
        @if $border-radius != 0 {
            border-radius: $border-radius;
        }

        @if $sass-burger-add-vendor-prefixes {
            -webkit-transition-property: background-color, -webkit-transform;
            -moz-transition-property: background-color, -moz-transform;
            -o-transition-property: background-color, -o-transform;
        }
        transition-property: background-color, transform;

        @if $sass-burger-add-vendor-prefixes {
            -webkit-transition-duration: $transition-duration;
            -moz-transition-duration: $transition-duration;
            -o-transition-duration: $transition-duration;
        }
        transition-duration: $transition-duration;
    }

    &::before, &::after {
        position: absolute;
        content: "";
    }

    &::before {
        top: -($height + $gutter);
    }

    &::after {
        top: $height + $gutter;
    }
}


// Select parts of the burger
@mixin burger-parts {
    &, &::before, &::after {
        @content;
    }
}

@mixin burger-top {
    &::before {
        @content;
    }
}

@mixin burger-middle {
    & {
        @content;
    }
}

@mixin burger-bottom {
    &::after {
        @content;
    }
}


// Burger animations
@mixin burger-to-cross($color: auto) {
    & {
        background-color: transparent;
    }
    @if ($color != auto) {
        &::before, &::after {
            background-color: $color;
        }
    }
    &::before {
        @if $sass-burger-add-vendor-prefixes {
            -webkit-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
            -moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
            -ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
            -o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
        }
        transform: translateY($burger-gutter + $burger-height) rotate(45deg);
    }
    &::after {
        @if $sass-burger-add-vendor-prefixes {
            -webkit-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
            -moz-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
            -ms-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
            -o-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
        }
        transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
    }
}
